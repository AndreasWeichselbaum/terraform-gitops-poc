name: 'Reusable'
on:
  workflow_call:
    inputs:
      MODULE:
        required: true
        type: string
jobs:
  terraform-plan-dev-main:
    name: 'Terraform plan DEV main'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      TF_VAR_billing_account: ${{ secrets.TF_VAR_billing_account }}
      TF_VAR_bucket_name: ${{ secrets.TF_VAR_bucket_name }}
      TF_VAR_dns_domain: ${{ secrets.TF_VAR_dns_domain }}
      TF_VAR_domain: ${{ secrets.TF_VAR_domain }}
      TF_VAR_folder_id: ${{ secrets.TF_VAR_folder_id }}
      TF_VAR_name: ${{ secrets.TF_VAR_name }}
      TF_VAR_project_suffix: ${{ secrets.TF_VAR_project_suffix }}
      TF_PLAN_FILE: "plan_main_dev"

    # The subsequent apply action needs to know the exit code of 'terraform plan' in order to know if it can be skipped or not
    outputs:
      terraform-plan-exitcode: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: GitHub App Token Setup
        id: GitHubApp
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout own
        uses: actions/checkout@v3
        with:
          token: ${{ steps.GitHubApp.outputs.token }}
          submodules: true

      - name: Set GIT wide credentials
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: 'https://x-access-token:${{ steps.GitHubApp.outputs.token }}@github.com/'

      - id: auth
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{ env.module }}
        shell: bash
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.module }}
        shell: bash
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ${{ env.module }}
        shell: bash
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.module }}
        shell: bash
        continue-on-error: true
        # -detailed-exitcode is used to skip subsequent terraform applies, if there are no changes detected by terraform plan
        run: |
          terraform plan -out=plan.tfplan -detailed-exitcode
          echo "::set-output name=exitcode::$(echo $?)"

      - name: Archive Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: plan-file
          path: ${{env.MODULE}}/plan.tfplan

      - name: Archive Firestore Backup Code
        uses: actions/upload-artifact@v3
        with:
          name: firestore-backup
          path: cloud-function-firestore-backup.zip

      - name: Archive Load Test Code
        uses: actions/upload-artifact@v3
        with:
          name: load-test
          path: cloud-function-load-test.zip

      - name: Archive Chat Notification Code
        uses: actions/upload-artifact@v3
        with:
          name: cloud-function-notification
          path: cloud-function-notification.zip

